{
    "Modules": {
        "Alert": "modules.notify.Alert",
        "COM1": "modules.port.SerialPort",
        "COM2": "modules.port.SerialPort",
        "Scheduler1": "modules.schedule.Scheduler",
        "Scheduler2": "modules.schedule.Scheduler",
        "Scheduler3": "modules.schedule.Scheduler",
        "FileExporter": "modules.export.FileExporter",
        "PreProcessor": "modules.processing.PreProcessor",
        "PolarTransformer": "modules.totalstation.PolarTransformer",
        "DistanceCorrector": "modules.totalstation.DistanceCorrector",
        "ReturnCodeInspector": "modules.processing.ReturnCodeInspector",
        "HelmertTransformer": "modules.totalstation.HelmertTransformer",
        "RealTimePublisher": "modules.export.RealTimePublisher",
        "VirtualLeicaTM30": "modules.virtual.VirtualLeicaTM30"
    },
    "Project": {
        "Name": "Project X",
        "ID": "7b720202-f5af-4c68-bb98-641024ae6593",
        "Description": "Project for testing only."
    },
    "Intercom": {
        "MQTT": {
            "Host": "iot.eclipse.org",
            "Port": 1883,
            "KeepAlive": 60,
            "Topic": "98ca9b13-f1b0-4868-8a4e-615461a6093f/OpenADMS"
        }
    },
    "Ports": {
        "Serial": {
            "COM1": {
                "Port": "COM1",
                "BaudRate": 4800,
                "ByteSize": 8,
                "StopBits": 1,
                "Parity": "none",
                "Timeout": 2.0,
                "SoftwareFlowControl": false,
                "HardwareFlowControl": false
            },
            "COM2": {
                "Port": "COM2",
                "BaudRate": 115200,
                "ByteSize": 8,
                "StopBits": 1,
                "Parity": "none",
                "Timeout": 2.0,
                "SoftwareFlowControl": false,
                "HardwareFlowControl": false
            }
        }
    },
    "Sensors": {
        "STS DTM": {
            "Description": "STS DTM meteorology sensor",
            "Type": "Weather Station",
            "Observations": [
                {
                    "Description": "Initialize the sensor.",
                    "Enabled": true,
                    "ID": null,
                    "Name": "initialize",
                    "NextReceiver": 0,
                    "Onetime": true,
                    "Receivers": [
                        "PreProcessor"
                    ],
                    "RequestSets": {
                        "power_on": {
                            "Enabled": true,
                            "Request": "A\r",
                            "Response": "",
                            "ResponsePattern": "(?P<PowerOn>#)",
                            "ResponseDelimiter": "\r",
                            "SleepTime": 1.0,
                            "Timeout": 1.0
                        },
                        "set_command_set": {
                            "Enabled": true,
                            "Request": "CMDT 1\r",
                            "Response": "",
                            "ResponsePattern": "(?P<SetCmd>\\*)",
                            "ResponseDelimiter": "\r",
                            "SleepTime": 1.0,
                            "Timeout": 1.0
                        },
                        "save": {
                            "Enabled": true,
                            "Request": "SAVE\r",
                            "Response": "",
                            "ResponsePattern": "(?P<Save>\\*)",
                            "ResponseDelimiter": "\r",
                            "SleepTime": 1.0,
                            "Timeout": 1.0
                        }
                    },
                    "RequestsOrder": [
                        "power_on",
                        "set_command_set",
                        "save"
                    ],
                    "ResponseSets": {
                        "PowerOn": {
                            "Type": "String",
                            "Unit": "none"
                        },
                        "SetCmd": {
                            "Type": "String",
                            "Unit": "none"
                        },
                        "Save": {
                            "Type": "String",
                            "Unit": "none"
                        }
                    },
                    "SleepTime": 1.0
                },
                {
                    "Name": "get_values",
                    "Description": "Get sensor values (temperature, pressure).",
                    "Receivers": [
                        "PreProcessor",
                        "DistanceCorrector",
                        "FileExporter"
                    ],
                    "NextReceiver": 0,
                    "Enabled": true,
                    "Onetime": false,
                    "ID": "TP",
                    "RequestsOrder": [
                        "get_temperature",
                        "get_pressure"
                    ],
                    "RequestSets": {
                        "get_temperature": {
                            "Enabled": true,
                            "Request": "TEMP ?\r",
                            "Response": "",
                            "ResponseDelimiter": "\r",
                            "ResponsePattern": "(?P<Temperature>[+-]?\\d+\\.+\\d)",
                            "SleepTime": 1.0,
                            "Timeout": 1.0
                        },
                        "get_pressure": {
                            "Enabled": true,
                            "Request": "PRES ?\r",
                            "Response": "",
                            "ResponseDelimiter": "\r",
                            "ResponsePattern": "(?P<Pressure>[+-]?\\d+\\.+\\d)",
                            "SleepTime": 1.0,
                            "Timeout": 1.0
                        }
                    },
                    "ResponseSets": {
                        "Temperature": {
                            "Type": "Float",
                            "Unit": "C"
                        },
                        "Pressure": {
                            "Type": "Float",
                            "Unit": "mbar"
                        }
                    },
                    "SleepTime": 20.0
                }
            ]
        },
        "Leica TM30": {
            "Description": "Leica TM30 total station",
            "Type": "Total Station",
            "Observations": [
                {
                    "Name": "beep",
                    "Description": "Just beep.",
                    "Receivers": [],
                    "NextReceiver": 0,
                    "Enabled": true,
                    "Onetime": true,
                    "SleepTime": 5.0,
                    "ID": "BEEP",
                    "RequestSets": {
                        "beep_on": {
                            "Enabled": true,
                            "Request": "%R1Q,20001:50\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)",
                            "ResponseDelimiter": "\r\n",
                            "SleepTime": 1.0,
                            "Timeout": 15.0
                        },
                        "beep_off": {
                            "Enabled": true,
                            "Request": "%R1Q,20000:\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)",
                            "ResponseDelimiter": "\r\n",
                            "SleepTime": 0.0,
                            "Timeout": 15.0
                        }
                    },
                    "RequestsOrder": [
                        "beep_on",
                        "beep_off"
                    ],
                    "ResponseSets": {
                        "ReturnCode": {
                            "Type": "Integer",
                            "Unit": "none"
                        }
                    }
                },
                {
                    "Name": "wait",
                    "Description": "Do wait.",
                    "Receivers": [],
                    "NextReceiver": 0,
                    "Enabled": true,
                    "Onetime": false,
                    "SleepTime": 15.0,
                    "ID": "WAIT",
                    "RequestSets": {},
                    "RequestsOrder": [],
                    "ResponseSets": {}
                },
                {
                    "Name": "initialize",
                    "Description": "Initialize sensor.",
                    "Receivers": [
                        "PreProcessor",
                        "ReturnCodeInspector"
                    ],
                    "NextReceiver": 0,
                    "Enabled": true,
                    "Onetime": true,
                    "SleepTime": 5.0,
                    "ID": "INIT",
                    "RequestSets": {
                        "get_sensor_id": {
                            "Enabled": true,
                            "Request": "%R1Q,5003:\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)(?:,(?P<SensorID>\\d+))",
                            "ResponseDelimiter": "\r\n",
                            "SleepTime": 0.5,
                            "Timeout": 15.0
                        },
                        "get_sensor_name": {
                            "Enabled": true,
                            "Request": "%R1Q,5004:\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)(?:,(?P<SensorName>\"[\\w\\W]+\"))",
                            "ResponseDelimiter": "\r\n",
                            "SleepTime": 0.5,
                            "Timeout": 15.0
                        },
                        "get_software_version": {
                            "Enabled": true,
                            "Request": "%R1Q,5034:\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)(?:,(?P<Release>\\d+),(?P<Version>\\d+),(?P<SubVersion>\\d+))",
                            "ResponseDelimiter": "\r\n",
                            "SleepTime": 0.5,
                            "Timeout": 15.0
                        },
                        "get_internal_temperature": {
                            "Enabled": true,
                            "Request": "%R1Q,5011:\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)(?:,(?P<InternalTemperature>[\\d+\\.]+))",
                            "ResponseDelimiter": "\r\n",
                            "SleepTime": 0.5,
                            "Timeout": 15.0
                        },
                        "set_edm_type": {
                            "Enabled": true,
                            "Request": "%R1Q,17021:0\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)",
                            "ResponseDelimiter": "\r\n",
                            "SleepTime": 0.5,
                            "Timeout": 15.0
                        },
                        "set_atmospheric_ppm": {
                            "Enabled": true,
                            "Request": "%R1Q,2148:0\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)",
                            "ResponseDelimiter": "\r\n",
                            "SleepTime": 0.5,
                            "Timeout": 15.0
                        },
                        "set_geometric_ppm_correction_factor": {
                            "Enabled": true,
                            "Request": "%R1Q,2153:0,0,0,0,0\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)",
                            "ResponseDelimiter": "\r\n",
                            "SleepTime": 0.5,
                            "Timeout": 15.0
                        },
                        "enable_angle_correction": {
                            "Enabled": true,
                            "Request": "%R1Q,2016:1,1,1,1\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)",
                            "ResponseDelimiter": "\r\n",
                            "SleepTime": 0.5,
                            "Timeout": 15.0
                        },
                        "do_beep": {
                            "Enabled": true,
                            "Request": "%R1Q,11004:\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)",
                            "ResponseDelimiter": "\r\n",
                            "SleepTime": 0.5,
                            "Timeout": 15.0
                        }
                    },
                    "RequestsOrder": [
                        "do_beep",
                        "get_sensor_id",
                        "get_sensor_name",
                        "get_software_version",
                        "get_internal_temperature",
                        "set_edm_type",
                        "set_atmospheric_ppm",
                        "set_geometric_ppm_correction_factor",
                        "enable_angle_correction",
                        "do_beep"
                    ],
                    "ResponseSets": {
                        "ReturnCode": {
                            "Type": "Integer",
                            "Unit": "none"
                        },
                        "SensorID": {
                            "Type": "String",
                            "Unit": "none"
                        },
                        "SensorName": {
                            "Type": "String",
                            "Unit": "none"
                        },
                        "Release": {
                            "Type": "Integer",
                            "Unit": "none"
                        },
                        "Version": {
                            "Type": "Integer",
                            "Unit": "none"
                        },
                        "SubVersion": {
                            "Type": "Integer",
                            "Unit": "none"
                        },
                        "InternalTemperature": {
                            "Type": "Float",
                            "Unit": "C"
                        }
                    }
                },
                {
                    "Description": "Get complete measurement.",
                    "Enabled": true,
                    "ID": "P1",
                    "Name": "P1",
                    "NextReceiver": 0,
                    "Onetime": false,
                    "Receivers": [
                        "PreProcessor",
                        "ReturnCodeInspector",
                        "DistanceCorrector",
                        "HelmertTransformer",
                        "RealTimePublisher",
                        "FileExporter"
                    ],
                    "RequestSets": {
                        "get_values": {
                            "Enabled": true,
                            "Request": "%R1Q,2167:5000,1\r\n",
                            "ResponseDelimiter": "\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)(?:,(?P<Hz>\\d*\\.?\\d+),(?P<V>\\d*\\.?\\d+),(?P<AccAngle>-?\\d*\\.?\\d+),(?P<C>-?\\d*\\.?\\d*),(?P<L>-?\\d*\\.?\\d*),(?P<AccIncl>-?\\d*\\.?\\d*),(?P<SlopeDist>\\d*\\.?\\d*),(?P<DistTime>-?\\d*))",
                            "SleepTime": 0.0,
                            "Timeout": 15.0
                        },
                        "measure_distance": {
                            "Enabled": true,
                            "Request": "%R1Q,2008:1,1\r\n",
                            "ResponseDelimiter": "\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)",
                            "SleepTime": 2.0,
                            "Timeout": 15.0
                        },
                        "set_direction": {
                            "Enabled": true,
                            "Request": "%R1Q,9027:0.0,1.59115,2,1,0\r\n",
                            "ResponseDelimiter": "\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)",
                            "SleepTime": 2.0,
                            "Timeout": 15.0
                        }
                    },
                    "RequestsOrder": [
                        "set_direction",
                        "measure_distance",
                        "get_values"
                    ],
                    "ResponseSets": {
                        "AccAngle": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "AccIncl": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "C": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "DistTime": {
                            "Type": "Integer",
                            "Unit": "ns"
                        },
                        "Hz": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "L": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "ReturnCode": {
                            "Type": "Integer",
                            "Unit": "none"
                        },
                        "SlopeDist": {
                            "Type": "Float",
                            "Unit": "m"
                        },
                        "V": {
                            "Type": "Float",
                            "Unit": "rad"
                        }
                    },
                    "SleepTime": 15.0
                },
                {
                    "Description": "Get complete measurement.",
                    "Enabled": true,
                    "ID": "P2",
                    "Name": "P2",
                    "NextReceiver": 0,
                    "Onetime": false,
                    "Receivers": [
                        "PreProcessor",
                        "ReturnCodeInspector",
                        "DistanceCorrector",
                        "HelmertTransformer",
                        "RealTimePublisher",
                        "FileExporter"
                    ],
                    "RequestSets": {
                        "get_values": {
                            "Enabled": true,
                            "Request": "%R1Q,2167:5000,1\r\n",
                            "ResponseDelimiter": "\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)(?:,(?P<Hz>\\d*\\.?\\d+),(?P<V>\\d*\\.?\\d+),(?P<AccAngle>-?\\d*\\.?\\d+),(?P<C>-?\\d*\\.?\\d*),(?P<L>-?\\d*\\.?\\d*),(?P<AccIncl>-?\\d*\\.?\\d*),(?P<SlopeDist>\\d*\\.?\\d*),(?P<DistTime>-?\\d*))",
                            "SleepTime": 0.0,
                            "Timeout": 15.0
                        },
                        "measure_distance": {
                            "Enabled": true,
                            "Request": "%R1Q,2008:1,1\r\n",
                            "ResponseDelimiter": "\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)",
                            "SleepTime": 2.0,
                            "Timeout": 15.0
                        },
                        "set_direction": {
                            "Enabled": true,
                            "Request": "%R1Q,9027:0.38098,1.58265,2,1,0\r\n",
                            "ResponseDelimiter": "\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)",
                            "SleepTime": 2.0,
                            "Timeout": 15.0
                        }
                    },
                    "RequestsOrder": [
                        "set_direction",
                        "measure_distance",
                        "get_values"
                    ],
                    "ResponseSets": {
                        "AccAngle": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "AccIncl": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "C": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "DistTime": {
                            "Type": "Integer",
                            "Unit": "ns"
                        },
                        "Hz": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "L": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "ReturnCode": {
                            "Type": "Integer",
                            "Unit": "none"
                        },
                        "SlopeDist": {
                            "Type": "Float",
                            "Unit": "m"
                        },
                        "V": {
                            "Type": "Float",
                            "Unit": "rad"
                        }
                    },
                    "SleepTime": 15.0
                },
                {
                    "Description": "Get complete measurement.",
                    "Enabled": true,
                    "ID": "P3",
                    "Name": "P3",
                    "NextReceiver": 0,
                    "Onetime": false,
                    "Receivers": [
                        "PreProcessor",
                        "ReturnCodeInspector",
                        "DistanceCorrector",
                        "HelmertTransformer",
                        "RealTimePublisher",
                        "FileExporter"
                    ],
                    "RequestSets": {
                        "get_values": {
                            "Enabled": true,
                            "Request": "%R1Q,2167:5000,1\r\n",
                            "ResponseDelimiter": "\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)(?:,(?P<Hz>\\d*\\.?\\d+),(?P<V>\\d*\\.?\\d+),(?P<AccAngle>-?\\d*\\.?\\d+),(?P<C>-?\\d*\\.?\\d*),(?P<L>-?\\d*\\.?\\d*),(?P<AccIncl>-?\\d*\\.?\\d*),(?P<SlopeDist>\\d*\\.?\\d*),(?P<DistTime>-?\\d*))",
                            "SleepTime": 0.0,
                            "Timeout": 15.0
                        },
                        "measure_distance": {
                            "Enabled": true,
                            "Request": "%R1Q,2008:1,1\r\n",
                            "ResponseDelimiter": "\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)",
                            "SleepTime": 2.0,
                            "Timeout": 15.0
                        },
                        "set_direction": {
                            "Enabled": true,
                            "Request": "%R1Q,9027:0.97279,1.59096,2,1,0\r\n",
                            "ResponseDelimiter": "\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)",
                            "SleepTime": 2.0,
                            "Timeout": 15.0
                        }
                    },
                    "RequestsOrder": [
                        "set_direction",
                        "measure_distance",
                        "get_values"
                    ],
                    "ResponseSets": {
                        "AccAngle": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "AccIncl": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "C": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "DistTime": {
                            "Type": "Integer",
                            "Unit": "ns"
                        },
                        "Hz": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "L": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "ReturnCode": {
                            "Type": "Integer",
                            "Unit": "none"
                        },
                        "SlopeDist": {
                            "Type": "Float",
                            "Unit": "m"
                        },
                        "V": {
                            "Type": "Float",
                            "Unit": "rad"
                        }
                    },
                    "SleepTime": 15.0
                },
                {
                    "Description": "Get complete measurement.",
                    "Enabled": true,
                    "ID": "P4",
                    "Name": "P4",
                    "NextReceiver": 0,
                    "Onetime": false,
                    "Receivers": [
                        "PreProcessor",
                        "ReturnCodeInspector",
                        "DistanceCorrector",
                        "HelmertTransformer",
                        "RealTimePublisher",
                        "FileExporter"
                    ],
                    "RequestSets": {
                        "get_values": {
                            "Enabled": true,
                            "Request": "%R1Q,2167:5000,1\r\n",
                            "ResponseDelimiter": "\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)(?:,(?P<Hz>\\d*\\.?\\d+),(?P<V>\\d*\\.?\\d+),(?P<AccAngle>-?\\d*\\.?\\d+),(?P<C>-?\\d*\\.?\\d*),(?P<L>-?\\d*\\.?\\d*),(?P<AccIncl>-?\\d*\\.?\\d*),(?P<SlopeDist>\\d*\\.?\\d*),(?P<DistTime>-?\\d*))",
                            "SleepTime": 0.0,
                            "Timeout": 15.0
                        },
                        "measure_distance": {
                            "Enabled": true,
                            "Request": "%R1Q,2008:1,1\r\n",
                            "ResponseDelimiter": "\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)",
                            "SleepTime": 2.0,
                            "Timeout": 15.0
                        },
                        "set_direction": {
                            "Enabled": true,
                            "Request": "%R1Q,9027:2.16696,1.59125,2,1,0\r\n",
                            "ResponseDelimiter": "\r\n",
                            "ResponsePattern": "(?:%R1P,0,0:)(?P<ReturnCode>\\d+)",
                            "SleepTime": 2.0,
                            "Timeout": 15.0
                        }
                    },
                    "RequestsOrder": [
                        "set_direction",
                        "measure_distance",
                        "get_values"
                    ],
                    "ResponseSets": {
                        "AccAngle": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "AccIncl": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "C": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "DistTime": {
                            "Type": "Integer",
                            "Unit": "ns"
                        },
                        "Hz": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "L": {
                            "Type": "Float",
                            "Unit": "rad"
                        },
                        "ReturnCode": {
                            "Type": "Integer",
                            "Unit": "none"
                        },
                        "SlopeDist": {
                            "Type": "Float",
                            "Unit": "m"
                        },
                        "V": {
                            "Type": "Float",
                            "Unit": "rad"
                        }
                    },
                    "SleepTime": 15.0
                }
            ]
        },
        "ADAM-4015": {
            "Description": "ADAM-4015 I/O module.",
            "Type": "I/O",
            "Observations": [
                {
                    "Name": "get_values",
                    "Description": "Get temperature values.",
                    "Receivers": [
                        "PreProcessor",
                        "FileExporter"
                    ],
                    "NextReceiver": 0,
                    "Enabled": true,
                    "Onetime": false,
                    "ID": "Pt100",
                    "RequestSets": {
                        "get_values": {
                            "Enabled": true,
                            "Request": "#01\r",
                            "ResponsePattern": ">(?P<Temperature1>[+-][\\d\\.]{6})(?P<Temperature2>[+-][\\d\\.]{6})(?P<Temperature3>[+-][\\d\\.]{6})(?P<Temperature4>[+-][\\d\\.]{6})(?P<Temperature5>[+-][\\d\\.]{6})(?P<Temperature6>[+-][\\d\\.]{6})",
                            "ResponseDelimiter": "\r",
                            "SleepTime": 0.0,
                            "Timeout": 5.0
                        }
                    },
                    "RequestsOrders": [
                        "get_values"
                    ],
                    "ResponseSets": {
                        "Temperature1": {
                            "Type": "Float",
                            "Unit": "C"
                        },
                        "Temperature2": {
                            "Type": "Float",
                            "Unit": "C"
                        },
                        "Temperature3": {
                            "Type": "Float",
                            "Unit": "C"
                        },
                        "Temperature4": {
                            "Type": "Float",
                            "Unit": "C"
                        },
                        "Temperature5": {
                            "Type": "Float",
                            "Unit": "C"
                        },
                        "Temperature6": {
                            "Type": "Float",
                            "Unit": "C"
                        }
                    }
                }
            ]
        },
        "DFT 485": {
            "Description": "DFT 485 meteorology sensor",
            "Type": "Weather Station",
            "Observations": [
                {
                    "Name": "get_values",
                    "Description": "Get temperature, air pressure, and humidity values.",
                    "Receivers": [
                        "PreProcessor",
                        "DistanceCorrector",
                        "FileExporter"
                    ],
                    "NextReceiver": 0,
                    "Enabled": true,
                    "Onetime": false,
                    "SleepTime": 5.0,
                    "ID": "Meteo",
                    "RequestSets": {
                        "get_values": {
                            "Enabled": true,
                            "Request": "?U\r\n",
                            "ResponsePattern": "TD(?P<TempPress>[\\d\\.]+), TE(?P<Temperature>[\\d\\.]+), DR(?P<Pressure>[\\d\\.]+), FE(?P<Humidity>[\\d\\.]+),",
                            "ResponseDelimiter": ", \r\n",
                            "Timeout": 0.8,
                            "SleepTime": 0.0
                        }
                    },
                    "ResponseSets": {
                        "TempPress": {
                            "Type": "Float",
                            "Unit": "C"
                        },
                        "Temperature": {
                            "Type": "Float",
                            "Unit": "C"
                        },
                        "Pressure": {
                            "Type": "Float",
                            "Unit": "hPa"
                        },
                        "Humidity": {
                            "Type": "Float",
                            "Unit": "%"
                        }
                    }
                }
            ]
        }
    },
    "Schedulers": {
        "Scheduler1": {
            "Port": "COM1",
            "Sensor": "STS DTM",
            "Schedules": [
                {
                    "Enabled": true,
                    "StartDate": "2016-02-01",
                    "EndDate": "2017-07-30",
                    "Schedule": {},
                    "Observations": [
                        "initialize",
                        "get_values"
                    ]
                }
            ]
        },
        "Scheduler2": {
            "Port": "COM2",
            "Sensor": "Leica TM30",
            "Schedules": [
                {
                    "Enabled": true,
                    "StartDate": "2016-02-01",
                    "EndDate": "2017-07-30",
                    "Schedule": {
                        "Monday": [
                            {
                                "StartTime": "00:00:00",
                                "EndTime": "23:59:59"
                            }
                        ],
                        "Tuesday": [],
                        "Wednesday": [],
                        "Thursday": [],
                        "Friday": [],
                        "Saturday": [],
                        "Sunday": []
                    },
                    "Observations": [
                        "wait",
                        "initialize",
                        "P1",
                        "P2",
                        "P3",
                        "P4"
                    ]
                }
            ]
        },
        "Scheduler3": {
            "Port": "VirtualLeicaTM30",
            "Sensor": "Leica TM30",
            "Schedules": [
                {
                    "Enabled": false,
                    "StartDate": "2016-02-01",
                    "EndDate": "2017-07-30",
                    "Schedule": {
                        "Monday": [],
                        "Tuesday": [],
                        "Wednesday": [],
                        "Thursday": [],
                        "Friday": [],
                        "Saturday": [],
                        "Sunday": []
                    },
                    "Observations": [
                        "initialize",
                        "P1",
                        "P2",
                        "P3",
                        "P4"
                    ]
                }
            ]
        }
    },
    "Alert": {
        "Enabled": false,
        "Handlers": {
            "ShortMessageSocketAlertHandler": {
                "Enabled": false,
                "LogLevels": [
                    "Error",
                    "Critical"
                ],
                "Host": "10.59.0.40",
                "Port": 1432,
                "PhoneNumbers": [
                    "+49176 12345678"
                ],
                "Template": "<?xml version=\"1.0\"?><cmgs destaddr=\"{number}\">OpenADMS \"Project X\": {asctime} - {level} - {msg}</cmgs>"
            },
            "MailAlertHandler": {
                "Enabled": false,
                "LogLevels": [
                    "Error",
                    "Critical"
                ],
                "Subject": "[OpenADMS] Alert Message - R318",
                "Recipients": [
                    "engineer@example.com"
                ],
                "Charset": "utf-8",
                "UserName": "monitoring@example.com",
                "UserPassword": "secret",
                "Host": "smtp.example.com",
                "Port": 465,
                "TLS": "Yes"
            }
        }
    },
    "DistanceCorrector": {
        "Temperature": null,
        "Pressure": null,
        "Humidity": 0.6,
        "AtmosphericCorrectionEnabled": true,
        "SealevelCorrectionEnabled": false,
        "SensorHeight": 100.0
    },
    "HelmertTransformer": {
        "ResidualMismatchTransformationEnabled": true,
        "ViewPoint": {
            "ID": "P6",
            "Receivers": [
                "OnlineViewer/P6"
            ],
            "SensorHeight": 0.1500
        },
        "TiePoints": {
            "P1": {
                "TargetHeight": 0.1100,
                "Y": 1000.0000,
                "X": 2000.0000,
                "Z": 100.0000
            },
            "P2": {
                "TargetHeight": 0.1100,
                "Y": 1003.7680,
                "X": 1995.4880,
                "Z": 100.0080
            },
            "P3": {
                "TargetHeight": 0.1100,
                "Y": 996.2600,
                "X": 1994.4900,
                "Z": 100.0210
            }
        }
    },
    "PolarTransformer": {
        "SensorPosition": {
            "Y": 1000.0000,
            "X": 2000.0000,
            "Z": 100.0000
        },
        "AzimuthPosition": {
            "Y": 1007.4992,
            "X": 2000.0000
        }
    },
    "RealTimePublisher": {
        "Enabled": true,
        "Receivers": [
            "OnlineViewer"
        ]
    },
    "FileExporter": {
        "FileExtension": ".csv",
        "FileName": "{port}_{id}_{date}",
        "FileRotation": "monthly",
        "Paths": [
            "./data"
        ],
        "Separator": ",",
        "DateTimeFormat": "%Y-%m-%dT%H:%M:%S.%f"
    }
}
